version: '3.8'

services:
  # Nginx Web Server
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/logs:/var/log/nginx
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    depends_on:
      - backend
      - frontend
    restart: always
    networks:
      - banhang_test_network
  
  # Laravel Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.test
    expose:
      - "9000"
    volumes:
      - ./backend:/var/www/html
      - ./env.test:/var/www/html/.env
    depends_on:
      - mysql
      - redis
    restart: always
    networks:
      - banhang_test_network
    environment:
      - APP_ENV=testing
      - APP_DEBUG=true
  
  # Next.js Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    expose:
      - "3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
      - ./env.frontend.test:/app/.env
    depends_on:
      - backend
    restart: always
    networks:
      - banhang_test_network
    environment:
      - NEXT_PUBLIC_API_URL=https://test.banhang.ai/api
      - NEXT_PUBLIC_BACKEND_URL=https://test.banhang.ai
      - NEXT_PUBLIC_APP_ENV=testing
  
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: banhang_mysql
    restart: always
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: banhang_test
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: banhang
      MYSQL_PASSWORD: banhang
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - banhang_test_network
  
  # Redis Cache
  redis:
    image: redis:alpine
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - banhang_test_network
  
  # phpMyAdmin for MySQL management
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: banhang_phpmyadmin
    restart: always
    ports:
      - "8080:80"
    environment:
      PMA_HOST: mysql
      MYSQL_ROOT_PASSWORD: root
    depends_on:
      - mysql
    networks:
      - banhang_test_network
  
  # Qdrant Vector Database
  qdrant:
    image: qdrant/qdrant
    restart: always
    ports:
      - "6333:6333"
    volumes:
      - qdrant_data:/qdrant/storage
    networks:
      - banhang_test_network

# Define networks
networks:
  banhang_test_network:
    driver: bridge

# Define volumes
volumes:
  mysql_data:
  redis_data:
  qdrant_data: 