version: '3.8'

services:
  # Backend service (Laravel)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.test
    container_name: banhang_backend_test
    volumes:
      - ./backend:/var/www/html
      - ./backend/storage/logs:/var/www/html/storage/logs
      - ./backend/storage/app:/var/www/html/storage/app
    environment:
      - APP_ENV=test
      - APP_DEBUG=false
    env_file:
      - .env.test
    depends_on:
      - mariadb
      - redis
      - qdrant
    networks:
      - banhang_test_network
    restart: unless-stopped

  # Frontend service (Next.js)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.test
    container_name: banhang_frontend_test
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    env_file:
      - env.frontend.test
    depends_on:
      - backend
    networks:
      - banhang_test_network
    restart: unless-stopped

  # Nginx service
  nginx:
    image: nginx:alpine
    container_name: banhang_nginx_test
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
      - ./backend/public:/var/www/html/public
      - ./backend/storage/app/public:/var/www/html/storage/app/public
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    depends_on:
      - backend
      - frontend
      - phpmyadmin
    networks:
      - banhang_test_network
    restart: unless-stopped

  # MariaDB instead of MySQL
  mariadb:
    image: mariadb:10.6
    container_name: banhang_mariadb_test
    volumes:
      - mariadb_test_data:/var/lib/mysql
      - ./mariadb/initdb.d:/docker-entrypoint-initdb.d
    environment:
      - MYSQL_DATABASE=${DB_DATABASE}
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
      - MYSQL_USER=${DB_USERNAME}
      - MYSQL_PASSWORD=${DB_PASSWORD}
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    networks:
      - banhang_test_network
    restart: unless-stopped

  # PHPMyAdmin for database management
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: banhang_phpmyadmin_test
    environment:
      - PMA_HOST=mariadb
      - PMA_PORT=3306
      - UPLOAD_LIMIT=64M
      - MEMORY_LIMIT=256M
      - MAX_EXECUTION_TIME=300
      - PMA_ABSOLUTE_URI=https://test.banhang.ai/phpmyadmin/
    depends_on:
      - mariadb
    networks:
      - banhang_test_network
    restart: unless-stopped

  # Redis for caching
  redis:
    image: redis:alpine
    container_name: banhang_redis_test
    volumes:
      - redis_test_data:/data
    networks:
      - banhang_test_network
    restart: unless-stopped

  # Qdrant for vector search
  qdrant:
    image: qdrant/qdrant
    container_name: banhang_qdrant_test
    volumes:
      - qdrant_test_data:/qdrant/storage
    ports:
      - "6333:6333"
    networks:
      - banhang_test_network
    restart: unless-stopped

  # Certbot for SSL certificates (if needed alongside Cloudflare)
  certbot:
    image: certbot/certbot
    container_name: banhang_certbot_test
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      - nginx
    command: renew
    entrypoint: /bin/sh -c "trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;"

networks:
  banhang_test_network:
    driver: bridge

volumes:
  mariadb_test_data:
  redis_test_data:
  qdrant_test_data: 