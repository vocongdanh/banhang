upstream backend_test {
    server backend:9000;
}

upstream frontend_test {
    server frontend:3000;
}

upstream phpmyadmin_test {
    server phpmyadmin:80;
}

upstream qdrant_test {
    server qdrant:6333;
}

server {
    listen 80;
    server_name test.banhang.ai;
    
    # Redirect all HTTP to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
    
    # Certbot validation directory
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
}

server {
    listen 443 ssl http2;
    server_name test.banhang.ai;

    # SSL configuration - Cloudflare origin certificate
    ssl_certificate /etc/nginx/ssl/test.banhang.ai.pem;
    ssl_certificate_key /etc/nginx/ssl/test.banhang.ai.key;
    
    # Recommended SSL settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;

    # Frontend routing
    location / {
        proxy_pass http://frontend_test;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Longer timeout for SSE/EventSource
        proxy_read_timeout 3600s;
        proxy_buffering off;
    }

    # Backend API
    location /api {
        # Try to serve file as is, otherwise proxy to PHP-FPM
        try_files $uri /index.php$is_args$args;
        
        # Forward to PHP-FPM
        location ~ ^/api/(.*)$ {
            fastcgi_pass backend_test;
            fastcgi_index index.php;
            fastcgi_param SCRIPT_FILENAME /var/www/html/public/index.php;
            include fastcgi_params;
            
            # Set proper path info
            fastcgi_param PATH_INFO /$1;
            
            # Forward real IP and protocol
            fastcgi_param HTTP_X_REAL_IP $remote_addr;
            fastcgi_param HTTP_X_FORWARDED_FOR $proxy_add_x_forwarded_for;
            fastcgi_param HTTP_X_FORWARDED_PROTO $scheme;
            
            # Longer timeout for long-running requests
            fastcgi_read_timeout 300;
            
            # Disable buffering for streaming responses (e.g., SSE)
            fastcgi_buffering off;
        }
    }
    
    # OAuth routes
    location /oauth {
        try_files $uri /index.php$is_args$args;
        
        location ~ ^/oauth/(.*)$ {
            fastcgi_pass backend_test;
            fastcgi_index index.php;
            fastcgi_param SCRIPT_FILENAME /var/www/html/public/index.php;
            include fastcgi_params;
            
            # Set proper path info
            fastcgi_param PATH_INFO /$1;
            
            # Forward real IP and protocol
            fastcgi_param HTTP_X_REAL_IP $remote_addr;
            fastcgi_param HTTP_X_FORWARDED_FOR $proxy_add_x_forwarded_for;
            fastcgi_param HTTP_X_FORWARDED_PROTO $scheme;
        }
    }
    
    # Special OAuth callback routes
    location /auth {
        try_files $uri /index.php$is_args$args;
        
        location ~ ^/auth/(.*)$ {
            fastcgi_pass backend_test;
            fastcgi_index index.php;
            fastcgi_param SCRIPT_FILENAME /var/www/html/public/index.php;
            include fastcgi_params;
            
            # Set proper path info
            fastcgi_param PATH_INFO /$1;
            
            # Forward real IP and protocol
            fastcgi_param HTTP_X_REAL_IP $remote_addr;
            fastcgi_param HTTP_X_FORWARDED_FOR $proxy_add_x_forwarded_for;
            fastcgi_param HTTP_X_FORWARDED_PROTO $scheme;
        }
    }
    
    # phpMyAdmin
    location /phpmyadmin {
        proxy_pass http://phpmyadmin_test;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }
    
    # Qdrant API (optional, consider securing this in production)
    location /qdrant {
        proxy_pass http://qdrant_test;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }
    
    # Static files from Laravel
    location /storage {
        alias /var/www/html/storage/app/public;
        try_files $uri $uri/ /index.php?$query_string;
    }
    
    # CORS headers for API
    location ~* \.(api|oauth) {
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
        add_header 'Access-Control-Allow-Headers' 'X-Requested-With, Content-Type, Authorization' always;
        
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
            add_header 'Access-Control-Allow-Headers' 'X-Requested-With, Content-Type, Authorization';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }
} 